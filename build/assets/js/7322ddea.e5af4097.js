"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[8607],{85538:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(87462),a=(n(67294),n(3905));const o={sidebar_position:3},r="Quickstart",s={unversionedId:"quickstart",id:"quickstart",title:"Quickstart",description:"Quickly get started with React UI Kit, with just a few lines of code!",source:"@site/docs/react-ui-kit/quickstart.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/react-ui-kit/quickstart",draft:!1,editUrl:"https://github.com/OpenIMSDK/OpenIM-Docs/tree/main/docs/docs/react-ui-kit/quickstart.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/react-ui-kit/installation"},next:{title:"Atomic Design",permalink:"/react-ui-kit/basics/atomic-design"}},u={},l=[],c={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quickstart"},"Quickstart"),(0,a.kt)("p",null,"Quickly get started with React UI Kit, with just a few lines of code!"),(0,a.kt)("p",null,"First you would need to setup your project with the provided hooks and the ",(0,a.kt)("inlineCode",{parentName:"p"},"<DyteProvider />"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function App() {\n  const [meeting, initMeeting] = useDyteClient();\n\n  useEffect(() => {\n    initMeeting({\n      roomName: '<room-name>',\n      authToken: '<auth-token>',\n      defaults: {\n        audio: false,\n        video: false,\n      },\n    });\n  }, []);\n\n  return (\n    <DyteProvider value={meeting}>\n      <MyMeeting />\n    </DyteProvider>\n  );\n}\n")),(0,a.kt)("p",null,"Read more about these hooks ",(0,a.kt)("a",{parentName:"p",href:"./basics/using-hooks"},"here"),"."),(0,a.kt)("p",null,"Then, your ",(0,a.kt)("inlineCode",{parentName:"p"},"<MyMeeting />")," component would look like this."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The live editors you see in the docs use a ",(0,a.kt)("em",{parentName:"p"},"mock")," web-core ",(0,a.kt)("inlineCode",{parentName:"p"},"meeting")," object with the help of ",(0,a.kt)("inlineCode",{parentName:"p"},"<DyteProvider />"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function MyMeeting() {\n  const { meeting } = useDyteMeeting();\n\n  return (\n    <div style={{ height: '480px' }}>\n      <DyteMeeting mode=\"fill\" meeting={meeting} />\n    </div>\n  );\n}\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Try adding ",(0,a.kt)("inlineCode",{parentName:"p"},"showSetupScreen={true}")," prop on ",(0,a.kt)("inlineCode",{parentName:"p"},"<DyteMeeting />")," to enable the Setup Screen.")),(0,a.kt)("head",null,(0,a.kt)("title",null,"Quickstart - React UI Kit | Dyte")))}d.isMDXComponent=!0}}]);